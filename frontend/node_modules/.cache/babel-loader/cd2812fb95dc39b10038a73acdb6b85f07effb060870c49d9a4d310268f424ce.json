{"ast":null,"code":"var _s = $RefreshSig$();\nconst {\n  useState\n} = require(\"react\");\nconst {\n  useAuthContext\n} = require(\"./useAuthContext\");\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save the user to local storage: if they close and re-open browser\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update authcontext\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"jRb62WpnerIRgoBnQ7W5ev/NTMI=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","require","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/user/Desktop/Learning Mern/frontend/src/hooks/useSignup.js"],"sourcesContent":["const { useState } = require(\"react\");\r\nconst { useAuthContext } = require(\"./useAuthContext\");\r\n\r\nexport const useSignup = () =>{\r\n    const[error,setError] = useState(null)\r\n    const[isLoading, setIsLoading] = useState(null)\r\n    const {dispatch } = useAuthContext()\r\n\r\n    const signup = async (email,password)=>{\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/api/user/signup', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json',},\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n\r\n        }\r\n        if(response.ok){\r\n            //save the user to local storage: if they close and re-open browser\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            //update authcontext\r\n            dispatch({type: 'LOGIN', payload: json})\r\n            setIsLoading(false)\r\n\r\n\r\n        }\r\n\r\n    }\r\n    return {signup, isLoading, error}\r\n}"],"mappings":";AAAA,MAAM;EAAEA;AAAS,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AACrC,MAAM;EAAEC;AAAe,CAAC,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEtD,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAC1B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAK,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM;IAACS;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEpC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAACC,QAAQ,KAAG;IACnCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAmB,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IAExB;IACA,IAAGQ,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCZ,YAAY,CAAC,KAAK,CAAC;IAGvB;EAEJ,CAAC;EACD,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAAD,EAAA,CAlCYD,SAAS;EAAA,QAGED,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}